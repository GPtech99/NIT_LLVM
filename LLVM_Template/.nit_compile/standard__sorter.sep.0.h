#include "nit.common.h"
extern const char FILE_standard__sorter[];
extern const int COLOR_standard__SequenceRead__standard__sorter__Comparator__COMPARED;
extern const int COLOR_standard__abstract_collection__Collection__length;
extern const struct type type_standard__Int;
extern const char FILE_standard__kernel[];
extern const int COLOR_standard__abstract_collection__Collection__first;
extern const int COLOR_standard__abstract_collection__Collection__iterator;
extern const int COLOR_standard__abstract_collection__Iterator__is_ok;
extern const int COLOR_standard__abstract_collection__Iterator__item;
extern const int COLOR_standard__sorter__Comparator__compare;
extern const int COLOR_standard__abstract_collection__Iterator__next;
extern const int COLOR_standard__abstract_collection__Iterator__finish;
extern const int COLOR_standard__sorter__Comparator__COMPARED;
extern const int COLOR_standard__Array__standard__sorter__Comparator__COMPARED;
extern const int COLOR_standard__sorter__Comparator__sub_sort;
extern const int COLOR_standard__sorter__Comparator__quick_sort;
extern const int COLOR_standard__sorter__Comparator__bubble_sort;
extern const int COLOR_standard__abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_standard__abstract_collection__Sequence___91d_93d_61d;
extern const int COLOR_standard__array__AbstractArray__swap_at;
long standard___standard__Int___Discrete__successor(long self, long p0);
extern const int COLOR_standard__sorter__Comparator__merge_sort;
extern const int COLOR_standard__sorter__Comparator__merge;
val* NEW_standard__Array(const struct type* type);
extern const int COLOR_standard__kernel__Object__init;
extern const int COLOR_standard__abstract_collection__SimpleCollection__add;
extern const int COLOR_standard__sorter__Comparator__build_heap;
extern const int COLOR_standard__sorter__Comparator__heapify;
extern const int COLOR_standard__abstract_collection__MapRead__keys;
extern const int COLOR_standard__array__Collection__to_a;
extern const int COLOR_standard__sorter__Comparator__sort;
extern const int COLOR_standard__Array__standard__MapRead___35dV;
extern const int COLOR_standard__array__Array__with_capacity;
extern const int COLOR_standard__abstract_collection__MapRead___91d_93d;
extern const int COLOR_standard__abstract_collection__Sequence__push;
extern const int COLOR_standard__sorter__MapRead__to_map_comparator;
val* NEW_standard__MapComparator(const struct type* type);
extern const int COLOR_standard__MapComparator__standard__MapRead___35dK__standard__MapRead___35dV;
extern const int COLOR_standard__sorter__MapComparator__map_61d;
extern const int COLOR_standard__sorter__MapComparator__comparator_61d;
extern const int COLOR_standard__sorter__MapComparator___map;
extern const int COLOR_standard__MapRead__standard__MapComparator___35dK__standard__MapComparator___35dV;
extern const int COLOR_standard__sorter__MapComparator___comparator;
extern const int COLOR_standard__sorter__MapComparator__comparator;
extern const int COLOR_standard__sorter__MapComparator__map;
extern const int COLOR_standard___standard__MapComparator___standard__kernel__Object__init;
extern const int COLOR_standard__kernel__Comparable___60d_61d_62d;
val* NEW_standard__DefaultComparator(const struct type* type);
extern const struct type type_standard__DefaultComparator;
val* NEW_standard__DefaultReverseComparator(const struct type* type);
extern const struct type type_standard__DefaultReverseComparator;
