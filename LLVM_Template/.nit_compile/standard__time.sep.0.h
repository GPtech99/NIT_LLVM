#include "nit.common.h"
#include "time_nit.h"
void* time___new_TimeT___impl(  );
void* time___new_TimeT_from_i___impl( long i );
void time___TimeT_update___impl( void* recv );
struct nitni_instance * time___TimeT_ctime___impl( void* recv );
val* standard___standard__NativeString___to_s_with_copy(char* self);
double time___TimeT_difftime___impl( void* recv, void* start );
extern const int COLOR_standard__time__TimeT__ctime;
val* standard___standard__NativeString___to_s_with_length(char* self, long p0);
extern const int COLOR_standard__string_search__Text__replace;
long time___TimeT_to_i___impl( void* recv );
void* time___new_Tm_gmtime___impl(  );
void* time___new_Tm_gmtime_from_timet___impl( void* t );
void* time___new_Tm_localtime___impl(  );
void* time___new_Tm_localtime_from_timet___impl( void* t );
void* time___Tm_to_timet___impl( void* recv );
long time___Tm_sec___impl( void* recv );
long time___Tm_min___impl( void* recv );
long time___Tm_hour___impl( void* recv );
long time___Tm_mday___impl( void* recv );
long time___Tm_mon___impl( void* recv );
long time___Tm_year___impl( void* recv );
long time___Tm_wday___impl( void* recv );
long time___Tm_yday___impl( void* recv );
int time___Tm_is_dst___impl( void* recv );
struct nitni_instance * time___Tm_asctime___impl( void* recv );
struct nitni_instance * time___Tm_strftime___impl( void* recv, struct nitni_instance * format );
extern const int COLOR_standard__string__Text__to_cstring;
val* standard___standard__NativeString___Object__to_s(char* self);
extern const int COLOR_standard__time__Tm__asctime;
extern const int COLOR_standard__time__ISODate___year;
extern const int COLOR_standard__time__ISODate___month;
extern const int COLOR_standard__time__ISODate___day;
extern const int COLOR_standard__time__ISODate___hours;
extern const int COLOR_standard__time__ISODate___minutes;
extern const int COLOR_standard__time__ISODate___seconds;
extern const int COLOR_standard__time__ISODate___timezone;
extern const char FILE_standard__time[];
val* NEW_standard__Tm(const struct type* type);
extern const struct type type_standard__Tm;
extern const int COLOR_standard__time__Tm__localtime;
extern const int COLOR_standard__time__Tm__year;
extern const struct type type_standard__Int;
extern const char FILE_standard__kernel[];
extern const int COLOR_standard__time__ISODate__year_61d;
extern const int COLOR_standard__time__Tm__mon;
extern const int COLOR_standard__time__ISODate__month_61d;
extern const int COLOR_standard__time__Tm__mday;
extern const int COLOR_standard__time__ISODate__day_61d;
extern const int COLOR_standard__time__Tm__hour;
extern const int COLOR_standard__time__ISODate__hours_61d;
extern const int COLOR_standard__time__Tm__min;
extern const int COLOR_standard__time__ISODate__minutes_61d;
extern const int COLOR_standard__time__Tm__sec;
extern const int COLOR_standard__time__ISODate__seconds_61d;
extern const int COLOR_standard__string__Text__substring;
extern const int COLOR_standard__string__Text__to_i;
extern const int COLOR_standard__string__Text__length;
extern const int COLOR_standard__time__ISODate__timezone_61d;
val* NEW_standard__FlatBuffer(const struct type* type);
extern const struct type type_standard__FlatBuffer;
extern const int COLOR_standard__kernel__Object__init;
extern const int COLOR_standard__time__ISODate__year;
val* standard__string___Int___Object__to_s(long self);
extern const int COLOR_standard__string__Buffer__append;
extern const int COLOR_standard__string__Buffer__add;
extern const int COLOR_standard__time__ISODate__month;
extern const int COLOR_standard__time__ISODate__day;
extern const int COLOR_standard__time__ISODate__hours;
extern const int COLOR_standard__time__ISODate__minutes;
extern const int COLOR_standard__time__ISODate__seconds;
extern const int COLOR_standard__time__ISODate__timezone;
extern const int COLOR_standard__stream__Writable__write_to_string;
extern const int COLOR_standard__kernel__Comparable__OTHER;
extern const int COLOR_standard__string__Object__to_s;
extern const int COLOR_standard__kernel__Comparable___60d;
